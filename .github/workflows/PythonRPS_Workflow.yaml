name: PythonRPS_Workflow

on:
  workflow_call: 
                                              # workflow_call is used to indicate that a workflow can be called by another workflow. When a workflow is triggered with the workflow_call event, 
                                              # the event payload in the called workflow is the same event payload from the calling workflow
   
jobs:
  RPS_Runner_SetUp:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["pypy3.10", "3.9", "3.10", "3.11", "3.12", "3.13"]
        # A matrix strategy lets you use variables in a single job definition to automatically create multiple job runs that are based on the combinations of the variables.
        # For example, you can use a matrix strategy to test your code in multiple versions of a language or on multiple operating systems. 
        # So the Matrix Here is based on setting up the runner against 6 different version of python 

    steps:
      # ======== Python Test Environment Set Up =========
      - run: echo "Python Set Up üêç"
      - uses: actions/checkout@v4                            # Actions/checkout is essential for cloning repositories into the runner's workspace
      - name: Set up Python ${{ matrix.python-version }}     # Contains the matrix properties defined in the workflow for the current job
        uses: actions/setup-python@v5                        # SetUp Python is an off the shelf action available in Github
        with:
          python-version: ${{ matrix.python-version }}       # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"      
      # ======== Install Dependencies ========
      - name: Install dependencies                           # GitHub-hosted runners have the pip package manager installed. You can use pip to install dependencies from the PyPI package registry before building and testing your code
        run: |
          python -m pip install --upgrade pip               
          pip install -r requirements.txt                   
      # requirements.txt is contained in your .github/ workflows repository
      
      # ======== Testing with pytest and pytest-cov =======
      - run: echo "Test Rock Paper Scissors Programme ‚úÇÔ∏èüßª"
    # - name: Test with pytest
    #   run: |
    #      pip install pytest pytest-cov
    #      pytest ./Python_Youtube_Tests/RockPaperScissorsExample_Test.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
    #   # pytest looks for folders called tests then looks for a file with anything that begins with the word test
